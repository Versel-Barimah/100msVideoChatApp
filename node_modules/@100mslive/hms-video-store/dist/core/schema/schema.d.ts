import { HMSPeer, HMSPeerID, HMSTrackID, HMSTrack, HMSSpeaker } from './peer';
import { HMSMessage, HMSMessageID } from './message';
import { HMSRoom } from './room';
import { HMSMediaSettings } from './settings';
import { DeviceMap, HMSPeerStats, HMSTrackStats } from '../hmsSDKStore/sdkTypes';
import { HMSRole } from './role';
import { HMSRoleChangeStoreRequest } from './requests';
import { HMSException } from './error';
import { HMSPlaylist } from './playlist';
export interface HMSStore {
    room: HMSRoom;
    peers: Record<HMSPeerID, HMSPeer>;
    speakers: Record<HMSTrackID, HMSSpeaker>;
    tracks: Record<HMSTrackID, HMSTrack>;
    playlist: HMSPlaylist<any>;
    messages: {
        byID: Record<HMSMessageID, HMSMessage>;
        allIDs: HMSMessageID[];
    };
    settings: HMSMediaSettings;
    devices: DeviceMap;
    roles: Record<string, HMSRole>;
    roleChangeRequests: HMSRoleChangeStoreRequest[];
    errors: HMSException[];
}
export interface HMSStatsStore {
    trackStats: Record<HMSTrackID, HMSTrackStats | undefined>;
    peerStats: Record<HMSPeerID, HMSPeerStats | undefined>;
    localPeer: {
        id: HMSPeerID;
        videoTrack?: HMSTrackID;
        audioTrack?: HMSTrackID;
    };
}
/**
 * @internal
 */
export declare const createDefaultStoreState: () => HMSStore;
export declare const createDefaultStatsStore: () => HMSStatsStore;
